/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/monthly/{monthly}": {
    get: operations["getMonthlyMonthly"];
    parameters: {
      path: {
        monthly: string;
      };
    };
  };
  "/api/transactions": {
    get: operations["getTransactions"];
  };
  "/api/usage": {
    get: operations["getUsage"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    PerMonth: {
      discounted: string;
    };
    LauntelTransactionResponse: {
      perMonth: {
        [key: string]: components["schemas"]["PerMonth"];
      };
    };
    MonthlyResponse: {
      total: number;
      totalPerPerson: number;
      invoiceNumber: string;
      startDate: string;
      endDate: string;
      daysInMonth: number;
      dailyCost: number;
      dailyCostPerPerson: number;
      issueDate: string;
    };
    UsageResponse: {
      usage: Record<string, never>;
    };
  };
  responses: {
  };
  parameters: {
  };
  requestBodies: {
  };
  headers: {
  };
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  getMonthlyMonthly: {
    parameters: {
      path: {
        monthly: string;
      };
    };
    responses: {
      /** @description Ok */
      default: {
        content: {
          "application/json": components["schemas"]["MonthlyResponse"];
        };
      };
    };
  };
  getTransactions: {
    responses: {
      /** @description Ok */
      default: {
        content: {
          "application/json": components["schemas"]["LauntelTransactionResponse"];
        };
      };
    };
  };
  getUsage: {
    responses: {
      /** @description Ok */
      default: {
        content: {
          "application/json": components["schemas"]["UsageResponse"];
        };
      };
    };
  };
}
